[33mcommit 8b8e13096698040dfaf739a0fb8461b9652f143b[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Weam Elsahhar <we15226@bristol.ac.uk>
Date:   Wed Oct 17 12:20:01 2018 +0100

    Version 1.1 on origin

[1mdiff --git a/Get_images_dir.m b/Get_images_dir.m[m
[1mnew file mode 100644[m
[1mindex 0000000..4806593[m
[1m--- /dev/null[m
[1m+++ b/Get_images_dir.m[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mfunction [Project_name,Run_name,FOV_name, Main_folder,failed]= Get_images_dir()[m
[32m+[m[32m%% Get main project folder[m
[32m+[m[32m%Get the main PIV project path through a dialouge box. A check is done[m
[32m+[m[32m%until the user inputs a folder or ask to quit ('loop_for_folder_input.m').[m
[32m+[m[32mIntial_prompt='Select main PIV project folder:';[m
[32m+[m[32mno_input_prompt='You didn''t select the main PIV project folder:';[m
[32m+[m[32m[ Main_folder,failed ] = loop_for_folder_input(Intial_prompt,...[m
[32m+[m[32m                                               no_input_prompt);[m
[32m+[m[32mif failed ==1[m
[32m+[m[32m    Project_name=[];[m
[32m+[m[32m    Main_folder=[];[m
[32m+[m[32m    Run_name=[];[m
[32m+[m[32m    FOV_name=[];[m
[32m+[m[32m    return;[m
[32m+[m[32mend[m
[32m+[m[41m   [m
[32m+[m[32msplitted = regexp(Main_folder,'\','split');           %Get last folder name[m
[32m+[m[32mProject_name=splitted{2};                             %(Project name)[m
[32m+[m[32mRun_name=splitted{3};[m
[32m+[m[32mFOV_name=splitted{4};[m
[32m+[m
[32m+[m
[32m+[m[32m% Print aquired project folder name[m
[32m+[m[32mdisp(['*******************Project:',Project_name,'*********************'...[m
[32m+[m[32m      '*******']);                                     % Print project name[m
[32m+[m[32mdisp(['Project folder path:',Main_folder]);            % and project path[m
[32m+[m[41m                                                    [m
[32m+[m[32m% cd(Main_folder);                                       %Move to project dir[m
[32m+[m[32m                                                       %makes it easier to[m
[32m+[m[32m                                                       %find the runs[m
[32m+[m[32mfailed =0;[m
[32m+[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/PIV_scheduler.m b/PIV_scheduler.m[m
[1mnew file mode 100644[m
[1mindex 0000000..e849619[m
[1m--- /dev/null[m
[1m+++ b/PIV_scheduler.m[m
[36m@@ -0,0 +1,278 @@[m
[32m+[m[32m%% PIV_scheduler[m
[32m+[m[32m%   Introduction:[m
[32m+[m[32m%   This piece of Matlab script can be used to schedule PIV (particle image[m
[32m+[m[32m%   velocimetry) vector feild extraction. The code implements a C based ex-[m
[32m+[m[32m%   ecutable for vector feild image extraction developed in Von Karman ins-[m
[32m+[m[32m%   titute by F.Scarano "widim33_2.exe".(To be used only at the University-[m
[32m+[m[32m%   of Bristol) You have to place "widim33_2.exe" in the same folder along-[m
[32m+[m[32m%   with this script POV_scheduler.[m
[32m+[m[32m%   Please refer to (r.theunissen@bristol.ac.uk, from:F.Scarano@tudelft.nl)[m
[32m+[m[32m%   for the latter dependency and further permissions.[m
[32m+[m[32m%[m
[32m+[m[32m%   Project files structures:[m
[32m+[m[32m%   The scheduler can be used to work with projects exported from PIV meas-[m
[32m+[m[32m%   urment tools (eg. DynamicStudio/Dantec). The project needs to be arran-[m
[32m+[m[32m%   ged to follow the following sturcture:[m
[32m+[m[32m%   Main_folder >>[m
[32m+[m[32m%                  %%Run A set of case studies (eg. different flow speeds)[m
[32m+[m[32m%                  >>10msec[m
[32m+[m[32m%                       %% Each case study can have several feilds of view[m
[32m+[m[32m%                       %% numbered sequentially (FOV'number')as follows.[m
[32m+[m[32m%                       >> FOV1[m
[32m+[m[32m%                           %% Each FOV* folder should contain another[m
[32m+[m[32m%                           %% folder called 'Renamed' including all the[m
[32m+[m[32m%                           %% image pairs and the maksing image according[m
[32m+[m[32m%                           %% "widim33_2.exe" designated formatting(Refer[m
[32m+[m[32m%                           %% to "widim33_2.exe" readme file).[m
[32m+[m[32m%                           %% The resulted vector feilds will be placed in[m
[32m+[m[32m%                           %% a folder called 'Vectors' in .plt format[m
[32m+[m[32m%                               >> Vectors[m
[32m+[m[32m%                                     >>bs_0000.plt[m
[32m+[m[32m%                                     >>bs_0001.plt[m
[32m+[m[32m%                                     >>bs_000*.plt[m
[32m+[m[32m%                       >> FOV2[m
[32m+[m[32m%                       >> FOV*[m
[32m+[m[32m%                  >>20msec[m
[32m+[m[32m%                  >>**msec[m
[32m+[m[32m%[m
[32m+[m[32m%  Inputs:[m
[32m+[m[32m%   MainFolder>>Run**>>FOV*>>Renamed>>*a.tif,*b.tif,mask_FOV*[m
[32m+[m[32m%[m
[32m+[m[32m%  Outputs:[m
[32m+[m[32m%   MainFolder>>Run**>>FOV*>>Vectors>>bs_****.plt,[m
[32m+[m[32m%[m
[32m+[m[32m%  Other m-files required: Get_PIV_paths.m, sub(loop_for_folder_input)[m
[32m+[m[32m%  Other non Matlab files required: widim33_2.exe[m
[32m+[m
[32m+[m[32m% Author: Weam Elsahhar[m
[32m+[m[32m% Uinversity of Bristol[m
[32m+[m[32m% email: we15226@bristol.ac.uk[m
[32m+[m[32m% Website: http://www.[m
[32m+[m[32m% May 2018; Last revision: 10-Sep-2018[m
[32m+[m
[32m+[m[32m%------------- BEGIN CODE --------------[m
[32m+[m
[32m+[m[32mclear all[m
[32m+[m[32mclose all[m
[32m+[m[32mclc[m
[32m+[m
[32m+[m[32m% disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');[m
[32m+[m[32m% disp('%                                                                %');[m
[32m+[m[32m% disp('% COPYRIGHT : WEAM ELSAHHAR - UNIVERSITY OF BRISTOL              %');[m
[32m+[m[32m% disp('%                                                                %');[m
[32m+[m[32m% disp('% THIS CODE REMAINS PROPERTY OF WEAM ELSAHHAR AND MAY NOT BE     %');[m
[32m+[m[32m% disp('% DISTRIBUTED WITHOUT PRIOR CONSENT OF THE AUTHOR.               %');[m
[32m+[m[32m% disp('%                                                                %');[m
[32m+[m[32m% disp('% PLEASE FEEL FREE TO REPORT ANY BUGS TO :we.15226@bristol.ac.uk %');[m
[32m+[m[32m% disp('%                                                                %');[m
[32m+[m[32m% disp('% Bristol, July 2018                                             %');[m
[32m+[m[32m% disp('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');[m
[32m+[m[32m% disp(' ');[m
[32m+[m
[32m+[m[32m%% Get paths:[m
[32m+[m[32m% Get the path of the main project folder from the user and ask for includ-[m
[32m+[m[32m% ed Runs[m
[32m+[m[32m[Project_name,Run_name,FOV_name, Main_folder,failed]= Get_images_dir();[m
[32m+[m
[32m+[m[32mif failed ==1[m
[32m+[m[32m    disp('Error:Folder selection failed')[m
[32m+[m[32m    return;[m
[32m+[m[32mend[m
[32m+[m[32mdoneflag=0;[m
[32m+[m[32mmy_firsttime=1; %:D[m
[32m+[m[32mProg_bar=waitbar(0,'Starting....');[m
[32m+[m[32mwhile(doneflag~=1)[m
[32m+[m
[32m+[m[32m%% Get information lsiting the image pairs content of the project:[m
[32m+[m[32m% Search for the project content of image pairs and returns files[m
[32m+[m[32m% arrangment according to the porject structure in the definition of this[m
[32m+[m[32m% script[m
[32m+[m[32m[Images_a,failed]=get_tifs_a(Main_folder);[m
[32m+[m[32m[Images_b,failed]=get_tifs_b(Main_folder);[m
[32m+[m[32mTotal_images_num=length(Images_a);[m
[32m+[m[32mif failed ==1[m
[32m+[m[32m    disp('Error:Images selection failed');[m
[32m+[m[32m    return;[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mif length(Images_a) ~= length(Images_b);[m
[32m+[m[32m   disp('Warning:Images missing from some image pairs');[m
[32m+[m[32m%    return;[m[41m [m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m[Vectors]=get_vectors(Main_folder);[m
[32m+[m
[32m+[m
[32m+[m[32m%% Print out project content and completion precentage[m
[32m+[m[32mdisp([num2str(length(Images_a)),': image pairs were found']);[m
[32m+[m[32mdisp([num2str(length(Vectors)),' resolved vectors were found ....',num2str(length(Vectors)/length(Images_a)*100),'%']);[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m%% Remove images from list for coressponding resolved vectors[m
[32m+[m[32m[Images_a,Images_b]=removedone(Images_a,Images_b,Vectors);[m
[32m+[m
[32m+[m[32m%% Create sequential cases and return group sizes for .cas files[m[41m  [m
[32m+[m[32m[groups]=sequence(Images_a);[m
[32m+[m
[32m+[m[32mif my_firsttime==1[m
[32m+[m[32m    for index=1:length(groups)[m
[32m+[m[32m        index_killed(index)=true;[m
[32m+[m[32m    end[m
[32m+[m[32melse[m
[32m+[m[41m    [m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32m%% Create configuration .cas file for each image pair and run "widim_33_2.exe"[m[41m  [m
[32m+[m[32m% cd 'E:\PIV\PIVscheduler_v1.1'[m
[32m+[m
[32m+[m[32mdisp('List of .cas files groups:')[m
[32m+[m[32mfor index=1:length(groups)[m
[32m+[m[32m    if index == 1[m
[32m+[m[32m        startimage_index=Images_a(index).name;[m
[32m+[m[32m    else[m
[32m+[m[32m        startimage_index=Images_a(sum(groups(1:index-1))+1).name;[m
[32m+[m[32m    end[m
[32m+[m[32m    if (groups(index)==1)[m
[32m+[m[32m        endimage_temp=Images_a(sum(groups(1:index-1))+1).name;[m
[32m+[m[32m        Lastnumber=str2double(endimage_temp(end-length('a.tif')))+1;[m
[32m+[m[32m        if Lastnumber==10[m
[32m+[m[32m            startimage_index(end-length('a.tif'))=num2str(Lastnumber-2);[m
[32m+[m[32m        else[m
[32m+[m[32m            endimage_temp(end-length('a.tif'))=num2str(Lastnumber);[m
[32m+[m[32m        end[m
[32m+[m[41m        [m
[32m+[m[32m        endimage_index=endimage_temp;[m
[32m+[m[32m    else[m
[32m+[m[32m        endimage_index=Images_a(sum(groups(1:index))).name;[m
[32m+[m[32m    end[m
[32m+[m[32m        filename{index}=create_cas(Main_folder,startimage_index,endimage_index,index);[m
[32m+[m[41m   [m
[32m+[m[32m        disp(['Group:',num2str(index),':',startimage_index,' to ',endimage_index]);[m
[32m+[m[32m        startimage(index)=str2double(regexp(startimage_index,'\d*','Match'));[m
[32m+[m[32m        endimage(index)=str2double(regexp(endimage_index,'\d*','Match'));[m
[32m+[m[32mend[m
[32m+[m[32mfor index=1:length(Images_a)[m
[32m+[m[32m    Images_nums=str2double(regexp(Images_a(index).name,'\d*','Match'));[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mfclose('all');[m
[32m+[m[32mif length(groups)>4[m
[32m+[m[32m    groupstorun=4; %maximum number of groups to run[m
[32m+[m[32melse[m
[32m+[m[32m    groupstorun=length(groups);[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mif (groupstorun)==0[m
[32m+[m[32m    disp('Postprocessing complete  :)')[m
[32m+[m[32m    return[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mfor index=1: groupstorun[m
[32m+[m[41m   [m
[32m+[m[32m    if index_killed(index)==true[m
[32m+[m[41m       [m
[32m+[m[32m        eval(['!start "group',Project_name,Run_name,FOV_name,num2str(index),'" .\widim33_2.exe ',Main_folder,'\',cell2mat(filename(index))]);[m
[32m+[m[32m        pause(20);[m
[32m+[m
[32m+[m[32m        index_killed(index)=false;[m
[32m+[m[32m    else[m
[32m+[m[32m    end[m
[32m+[m[32mend[m
[32m+[m[32mtimeout=140;[m
[32m+[m[32mkill_flag=0;[m
[32m+[m
[32m+[m
[32m+[m[32mprogress=length(Vectors)/Total_images_num;[m
[32m+[m[32mprogress_message=sprintf(['PIV (',num2str(progress*100),') precent completed in\n',Project_name,':',Run_name,':',FOV_name]);[m
[32m+[m[32mprogress_message(progress_message=='_')=' ';[m
[32m+[m[32mwaitbar(progress,Prog_bar,progress_message);[m
[32m+[m
[32m+[m[32mwhile (kill_flag==0)[m
[32m+[m[32m    Vectors1=length(get_vectors(Main_folder));[m
[32m+[m[32m    [ last_resolved ] =get_current_end( Main_folder ,Images_nums,groups,startimage,endimage);[m
[32m+[m[32m    disp('Start time out')[m
[32m+[m[32m    pause(timeout);[m
[32m+[m[32m    Vectors2=length(get_vectors(Main_folder));[m
[32m+[m[32m    [ current_last_resolved ] = get_current_end( Main_folder,Images_nums,groups,startimage,endimage);[m
[32m+[m[41m    [m
[32m+[m[32m    Date_time=(clock);[m
[32m+[m[32m    disp(['PIV timed out @', num2str(Date_time(4)),':',...[m
[32m+[m[32m        num2str(Date_time(5)),'---',num2str(Date_time(3)), ....[m
[32m+[m[32m        '/',num2str(Date_time(2)),'/',num2str(Date_time(1))]);[m
[32m+[m[32m    if length(last_resolved)==length(current_last_resolved)[m
[32m+[m[32m       for index=1:length(last_resolved)[m
[32m+[m[32m            if isnan(last_resolved(index))&& isnan(current_last_resolved(index))[m
[32m+[m[41m                [m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  before time out ',num2str(last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  after time out ',num2str(current_last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['Terminate group:',num2str(index),'\n']);[m
[32m+[m[32m                eval(['!taskkill /FI "WindowTitle eq group',Project_name,Run_name,FOV_name,num2str(index),'"']);[m
[32m+[m[32m                eval(['!taskkill /FI "WindowTitle eq group widim33_2.exe"']);[m
[32m+[m[32m                eval(['!taskkill /FI "IMAGENAME eq WerFault.exe"']);[m
[32m+[m[32m                index_killed(index)=true;[m
[32m+[m[32m                kill_flag=1;[m
[32m+[m[41m                [m
[32m+[m[32m            elseif isnan(last_resolved(index))&& ~isempty(current_last_resolved(index))[m
[32m+[m[41m                [m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  before time out ',num2str(last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  after time out ',num2str(current_last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf('Good continue\n');[m
[32m+[m[32m                index_killed(index)=false;[m
[32m+[m[41m            [m
[32m+[m[32m            elseif  current_last_resolved(index)>last_resolved(index)[m
[32m+[m[41m                [m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  before time out ',num2str(last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  after time out ',num2str(current_last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf('Good continue\n');[m
[32m+[m[32m                index_killed(index)=false;[m
[32m+[m[41m            [m
[32m+[m[32m            elseif current_last_resolved(index)==endimage(index)[m[41m [m
[32m+[m[41m            [m
[32m+[m[32m                kill_flag=1;[m
[32m+[m[41m            [m
[32m+[m[32m            else[m
[32m+[m[41m                [m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  before time out ',num2str(last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['In group:',num2str(index),' Last vector  after time out ',num2str(current_last_resolved(index)),'\n']);[m
[32m+[m[32m                fprintf(['Terminate group:',num2str(index),'\n']);[m
[32m+[m[32m                eval(['!taskkill /FI "WindowTitle eq group',Project_name,Run_name,FOV_name,num2str(index),'"']);[m
[32m+[m[32m                eval(['!taskkill /FI "WindowTitle eq group widim33_2.exe"']);[m
[32m+[m[32m                eval(['!taskkill /FI "IMAGENAME eq WerFault.exe"']);[m
[32m+[m[32m                index_killed(index)=true;[m
[32m+[m[32m                kill_flag=1;[m
[32m+[m[41m            [m
[32m+[m[32m            end[m
[32m+[m[32m        end[m
[32m+[m[32m    else[m
[32m+[m[32m         fprintf(['Number of groups os different from _previous number of groups \',...[m
[32m+[m[32m         '(Probably one group finished)']);[m
[32m+[m[32m         kill_flag=1;[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m[Vectors_prog]=get_vectors(Main_folder);[m[41m    [m
[32m+[m[32mprogress=length(Vectors_prog)/Total_images_num;[m
[32m+[m[32mprogress_message=sprintf(['PIV (',num2str(progress*100),') precent completed in\n',Project_name,':',Run_name,':',FOV_name]);[m
[32m+[m[32mprogress_message(progress_message=='_')=' ';[m
[32m+[m[32mwaitbar(progress,Prog_bar,progress_message);[m
[32m+[m[32mend[m
[32m+[m[32m   index_killed;[m
[32m+[m[32m   my_firsttime=my_firsttime+1;[m
[32m+[m[32m%    if Vectors2 < Vectors1+2[m
[32m+[m[32m%        Date_time=(clock);[m
[32m+[m[32m%        disp(['PIV timed out @', num2str(Date_time(4)),':',...[m
[32m+[m[32m%            num2str(Date_time(5)),'---',num2str(Date_time(3)), ....[m
[32m+[m[32m%            '/',num2str(Date_time(2)),'/',num2str(Date_time(1))]);[m[41m [m
[32m+[m[32m%        for index=1:length(groups)[m
[32m+[m[32m%            eval(['!taskkill /FI "WindowTitle eq group',Project_name,Run_name,FOV_name,num2str(index),'"']);[m
[32m+[m[32m%        end[m
[32m+[m[32m%       kill_flag=1;[m
[32m+[m[32m%    end[m
[32m+[m[32m   [Images2,failed]=get_tifs_a(Main_folder);[m
[32m+[m[32m   disp([num2str((Vectors2)),' resolved vectors were found ....',num2str((Vectors2)/length(Images2)*100),'%']);[m
[32m+[m
[32m+[m
[32m+[m[32m if length (Vectors2)>= length(Images2)[m
[32m+[m[32m    doneflag=1;[m[41m [m
[32m+[m[32m end[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/create_cas.m b/create_cas.m[m
[1mnew file mode 100644[m
[1mindex 0000000..18a7109[m
[1m--- /dev/null[m
[1m+++ b/create_cas.m[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mfunction filename=create_cas(Main_folder,startimage,endimage,index)[m
[32m+[m[32mcurrentFolder = Main_folder;[m
[32m+[m
[32m+[m[32mfilename=['config_group',num2str(index)];[m
[32m+[m[32mfid = fopen([currentFolder,'\',filename,'.cas'], 'w' );[m
[32m+[m
[32m+[m[32mfprintf( fid, '*****Picture_parameters*****\n');[m
[32m+[m[32mstring=[Main_folder,'\',startimage(1:end-length('***a.tif'))];[m
[32m+[m[32mfprintf( fid,'%s\n',string );[m
[32m+[m
[32m+[m[32mstart_number_string=startimage(end-length('**a.tif'):end-length('a.tif'));[m
[32m+[m[32mend_number_string=endimage(end-length('**a.tif'):end-length('a.tif'));[m
[32m+[m[32mfprintf( fid,[num2str(str2num(start_number_string)),'\n']);[m
[32m+[m[32mfprintf( fid,[num2str(str2num(end_number_string)),'\n']);[m
[32m+[m
[32m+[m[32mfprintf( fid,'%s\n','TIF');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','2072');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','2072');[m
[32m+[m[32mfprintf( fid,'%s\n','96');[m
[32m+[m[32mfprintf( fid,'%s\n','96');[m
[32m+[m[32mfprintf( fid,'%s\n','2');[m
[32m+[m[32mfprintf( fid,'%s\n','18');[m
[32m+[m[32mfprintf( fid,'%s\n','18');[m
[32m+[m[32mfprintf( fid,'%s\n','1.000000');[m
[32m+[m[32mfprintf( fid,'%s\n','1.000000');[m
[32m+[m[32mfprintf( fid,'%s\n','1.000000');[m
[32m+[m[32mfprintf( fid,'%s\n','*****Processing_parameters*****');[m
[32m+[m[32mfprintf( fid,'%s\n','no_raw');[m
[32m+[m[32mfprintf( fid,'%s\n','no_centroid');[m
[32m+[m[32mfprintf( fid,'%s\n','gaussian');[m
[32m+[m[32mfprintf( fid,'%s\n','no_whittaker');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','100');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','2');[m
[32m+[m[32mfprintf( fid,'%s\n','fft');[m
[32m+[m[32mfprintf( fid,'%s\n','y');[m
[32m+[m[32mfprintf( fid,'%s\n','3');[m
[32m+[m[32mfprintf( fid,'%s\n','*****Validation_procedure_parameters*****');[m
[32m+[m[32mfprintf( fid,'%s\n','y');[m
[32m+[m[32mfprintf( fid,'%s\n','5.50000');[m
[32m+[m[32mfprintf( fid,'%s\n','1.3');[m
[32m+[m[32mfprintf( fid,'%s\n','4');[m
[32m+[m[32mfprintf( fid,'%s\n','4');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','1.0000');[m
[32m+[m[32mfprintf( fid,'%s\n','n');[m
[32m+[m[32mfprintf( fid,'%s\n','*****Output_parameters*****');[m
[32m+[m[32mfprintf( fid,'%s\n','tecplot');[m
[32m+[m[32mfprintf( fid,'%s\n','tecplot');[m
[32m+[m
[32m+[m[32mstring=[Main_folder(1:end-length('\Renamed')),'\Vectors\bs',startimage((end-length('*****a.tif')):(end-length('***a.tif')))];[m
[32m+[m[32mfprintf( fid,'%s\n',string );[m
[32m+[m
[32m+[m[32mfprintf( fid,'%s\n','no_map');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','*****Optional_parameters*****');[m
[32m+[m
[32m+[m[32mstring=[Main_folder,'\mask'];[m
[32m+[m[32mfprintf( fid,'%s\n',string );[m
[32m+[m
[32m+[m[32mfprintf( fid,'%s\n','enabled');[m
[32m+[m[32mfprintf( fid,'%s\n','1');[m
[32m+[m[32mfprintf( fid,'%s\n','0.00000');[m
[32m+[m[32mfprintf( fid,'%s\n','0.00000');[m
[32m+[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/get_current_end.m b/get_current_end.m[m
[1mnew file mode 100644[m
[1mindex 0000000..06bc6d4[m
[1m--- /dev/null[m
[1m+++ b/get_current_end.m[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mfunction [ last_resolved ] = get_current_end( Main_folder,Images_nums,groups_init,startimage,endimage)[m
[32m+[m
[32m+[m
[32m+[m[32m[Vectors]=get_vectors(Main_folder);[m
[32m+[m
[32m+[m
[32m+[m[32mif isempty(Vectors)[m
[32m+[m[32m    for index=1:length(groups_init)[m[41m [m
[32m+[m[32m        last_resolved(index)=nan;[m
[32m+[m[32m    end[m
[32m+[m[32melse[m
[32m+[m[41m    [m
[32m+[m[32m    for index=1:length(Vectors)[m
[32m+[m[32m        Vectors_nums(index)=str2double(regexp(Vectors(index).name,'\d*','Match'));[m
[32m+[m[32m    end[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    for index=1:length(groups_init)[m
[32m+[m[32m        grouptemp=[];[m
[32m+[m[32m        grouptemp=startimage(index):1:endimage(index);[m
[32m+[m[32m        last_resolved_temp=[];[m
[32m+[m[32m        for index_vector=1:length(grouptemp)[m
[32m+[m[41m            [m
[32m+[m[32m            new_last_resolved_temp=Vectors_nums(Vectors_nums==grouptemp(index_vector));[m
[32m+[m[32m            if isempty(new_last_resolved_temp)[m
[32m+[m[32m                last_resolved_temp=last_resolved_temp;[m
[32m+[m[32m            else[m
[32m+[m[32m                if  isempty(last_resolved_temp)||(new_last_resolved_temp>last_resolved_temp)[m
[32m+[m[32m                    last_resolved_temp=new_last_resolved_temp;[m
[32m+[m[32m                else[m
[32m+[m[41m                    [m
[32m+[m[32m                    last_resolved_temp=last_resolved_temp;[m
[32m+[m[32m                end[m
[32m+[m[32m            end[m
[32m+[m[32m        end[m
[32m+[m[32m        if isempty(last_resolved_temp)[m
[32m+[m[32m            last_resolved(index)=nan;[m
[32m+[m[32m        else[m
[32m+[m[32m            last_resolved(index)=last_resolved_temp;[m
[32m+[m[32m        end[m
[32m+[m[32m        fprintf(['Vector Group:',num2str(index),':',num2str(startimage(index)),' to ',num2str(endimage(index)),'\n']);[m
[32m+[m[32m        fprintf(['Last vector found:',num2str(last_resolved(index)),'\n']);[m
[32m+[m[41m        [m
[32m+[m[32m    end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mend[m
[32m+[m
[1mdiff --git a/get_tifs_a.m b/get_tifs_a.m[m
[1mnew file mode 100644[m
[1mindex 0000000..db01511[m
[1m--- /dev/null[m
[1m+++ b/get_tifs_a.m[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mfunction [Images,failed]=get_tifs_a(Main_folder)[m
[32m+[m
[32m+[m[32m[Images]=dir([Main_folder,'\*a.tif']);[m
[32m+[m[32mif isempty(Images)[m
[32m+[m[32m    disp('EMPTY FOLDER:no *a.tif images in the folder');[m
[32m+[m[32m    Images=[];[m
[32m+[m[32m    failed=1;[m
[32m+[m[32mend[m
[32m+[m[32mfailed =0;[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/get_tifs_b.m b/get_tifs_b.m[m
[1mnew file mode 100644[m
[1mindex 0000000..200bc67[m
[1m--- /dev/null[m
[1m+++ b/get_tifs_b.m[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mfunction [Images,failed]=get_tifs_b(Main_folder)[m
[32m+[m
[32m+[m[32m[Images]=dir([Main_folder,'\*b.tif']);[m
[32m+[m[32mif isempty(Images)[m
[32m+[m[32m    disp('EMPTY FOLDER:no *b.tif images in the folder');[m
[32m+[m[32m    Images=[];[m
[32m+[m[32m    failed=1;[m
[32m+[m[32mend[m
[32m+[m[32mfailed =0;[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/get_vectors.m b/get_vectors.m[m
[1mnew file mode 100644[m
[1mindex 0000000..d73f70d[m
[1m--- /dev/null[m
[1m+++ b/get_vectors.m[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mfunction [Vectors]=get_vectors(Main_folder)[m
[32m+[m
[32m+[m[32m[Vectors]=dir([Main_folder(1:end-length('\Renamed')),'\Vectors\*.plt']);[m
[32m+[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/loop_for_folder_input.m b/loop_for_folder_input.m[m
[1mnew file mode 100644[m
[1mindex 0000000..66fc23d[m
[1m--- /dev/null[m
[1m+++ b/loop_for_folder_input.m[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32mfunction [ Main_folder,failed ] = loop_for_folder_input(prompt1,prompt2)[m
[32m+[m[32m%%[m[41m [m
[32m+[m[32m% Description:[m
[32m+[m[32m% The function asks the user to input a folder path through a dialouge box.[m
[32m+[m[32m% If the user cancels the function will keep asking for an input or permis-[m
[32m+[m[32m% son to quit.[m[41m  [m
[32m+[m[32m% The promprts (propmt1 and prompt2) for the intial message and the looping[m[41m [m
[32m+[m[32m% request are given as 'string' inputs to the functions.[m[41m  [m
[32m+[m[32m% THe function returns the folder full path.[m
[32m+[m[32m%[m
[32m+[m[32m% Syntax:[m
[32m+[m[32m% [Main_folder]=loop_for_folder_input(prompt1,prompt2)[m
[32m+[m[32m%[m[41m [m
[32m+[m[32m% Inputs:[m
[32m+[m[32m% prompt1- Intial request message (e.g 'Select PIV project folder:')[m
[32m+[m[32m% prompt2- Looping request message (e.g 'You didn''t select the PIV project[m
[32m+[m[32m%                                   folder:')[m
[32m+[m[32m% Outputs:[m
[32m+[m[32m% Main_folder- Full path of the folder[m
[32m+[m[32m% failed flag[m
[32m+[m
[32m+[m[32m%%[m
[32m+[m[32m% Author: Weam Elsahhar[m
[32m+[m[32m% Uinversity of Bristol[m
[32m+[m[32m% email: we15226@bristol.ac.uk[m
[32m+[m[32m% Website: http://www.[m
[32m+[m[32m% May 2018; Last revision: 19-Aug-2018[m
[32m+[m[32m%%[m
[32m+[m[32mfailed=0;[m
[32m+[m[32mdisp(prompt1);[m
[32m+[m[32mMain_folder = uigetdir();                        %Get main folder[m
[32m+[m[32mif (Main_folder==0)                              %If the user didn't input[m
[32m+[m[32m    Flag='y';[m
[32m+[m[32m    while ~strcmp(Flag,'n')                      %Loop for input or quit[m
[32m+[m[32m        fprintf([prompt2,'\n']);[m
[32m+[m[32m        Flag=lower(input(['Would you like to try again(Y) or quit(N)?(Y'...[m
[32m+[m[32m        '/N)'],'s'));                            %Asks to try again or quit[m
[32m+[m[41m        [m
[32m+[m[32m        if ~(strcmp(Flag,'n')||strcmp(Flag,'y')) %The user didn't input Y[m[41m                                                     [m
[32m+[m[32m            fprintf('Invalid input!\n');         %or n as a choice[m[41m   [m
[32m+[m[32m        elseif strcmp(Flag,'y')[m
[32m+[m[32m            Main_folder = uigetdir();  %Get folder if user tried again[m
[32m+[m[32m            if Main_folder==0;         %If the user didn't input again :|!![m
[32m+[m[32m                Flag='y';              %Set flag to keep looping[m
[32m+[m[32m            end[m
[32m+[m[32m        else[m
[32m+[m[32m            Flag='n';                  %The user chose to quit[m
[32m+[m[32m            failed=1;[m[41m                   [m
[32m+[m[32m            return;                    %break execution[m
[32m+[m[32m        end[m[41m   [m
[32m+[m[32m    end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mend[m
[32m+[m
[1mdiff --git a/removedone.m b/removedone.m[m
[1mnew file mode 100644[m
[1mindex 0000000..f23220e[m
[1m--- /dev/null[m
[1m+++ b/removedone.m[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mfunction [Images_a,Images_b]=removedone(Images_a,Images_b,Vectors)[m
[32m+[m[32mImage_temp=Images_a;[m
[32m+[m[32mVectors_temp=Vectors;[m
[32m+[m[32mfor index=1: length(Image_temp)[m
[32m+[m[32m    Image_temp_cells(index)=str2num(cell2mat(regexp(Image_temp(index).name,'\d*','Match')));[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mfor index=1: length(Vectors_temp)[m
[32m+[m[32m    Vectors_temp_cells(index)=str2num(cell2mat(regexp(Vectors_temp(index).name,'\d*','Match')));[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mif isempty(Vectors_temp)[m
[32m+[m[32m    Images_a=Images_a;[m
[32m+[m[32m    Images_b=Images_b;[m
[32m+[m[32melse[m
[32m+[m[32m    for index=1:length(Vectors_temp)[m
[32m+[m[32m        temp=find(Image_temp_cells==Vectors_temp_cells(index));[m
[32m+[m[32m        if isempty(temp)[m
[32m+[m[41m            [m
[32m+[m[32m        else[m
[32m+[m[32m            Index_done(index)=temp;[m
[32m+[m[41m            [m
[32m+[m[32m        end[m
[32m+[m[32m    end[m
[32m+[m[41m    [m
[32m+[m[32m    Images_a(Index_done)=[];[m
[32m+[m[32m    Images_b(Index_done)=[];[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/sequence.m b/sequence.m[m
[1mnew file mode 100644[m
[1mindex 0000000..d1a197b[m
[1m--- /dev/null[m
[1m+++ b/sequence.m[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mfunction [groups]=sequence(Images_a)[m
[32m+[m[32mcount=0;[m
[32m+[m[32mgroups=[];[m
[32m+[m[32mfor index=1:length(Images_a)[m
[32m+[m[32m    if index==1[m
[32m+[m[32m        count= 1;[m
[32m+[m[32m    else[m
[32m+[m[32m        currentindex=str2num(cell2mat(regexp(Images_a(index).name,'\d*','Match')));[m
[32m+[m[32m        previousindex=str2num(cell2mat(regexp(Images_a(index-1).name,'\d*','Match')));[m
[32m+[m[41m        [m
[32m+[m[32m        if ((currentindex - previousindex) ==1)                    % If the next image is in sequence example 837 - 838 and not crossing *998 - *999[m
[32m+[m[32m            count = count+1;                                       % Increment number of images in group[m
[32m+[m[32m            if floor(currentindex/1000)~=floor(previousindex/1000) % updtae groups and exit if Exit if crossed *999[m
[32m+[m[32m                groups=[groups , count-1];[m[41m                         [m
[32m+[m[32m                count=1;[m
[32m+[m[32m            end[m
[32m+[m[32m            if index == length(Images_a)[m
[32m+[m[32m                groups=[groups , count];[m
[32m+[m[32m                count=0;[m
[32m+[m[32m            end[m
[32m+[m[32m        elseif count == 1                       %If next image is not in sequence and the number of images in the goup is only =1[m[41m [m
[32m+[m[32m            groups=[groups , 1];                %Use 1 as a flg to add the next image because '.cas' can't configure 1 image only[m
[32m+[m[32m            count=1;[m
[32m+[m[32m        else[m
[32m+[m[32m            groups=[groups , count];[m
[32m+[m[32m            count=1;[m
[32m+[m[32m        end[m
[32m+[m[32m    end[m
[32m+[m[32mend[m
\ No newline at end of file[m
